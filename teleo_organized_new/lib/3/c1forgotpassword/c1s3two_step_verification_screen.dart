import 'package:flutter/material.dart';
import 'package:flutter/cupertino.dart';
import 'dart:async';
import 'c1s4new_password_screen.dart';

class TwoStepVerificationScreen extends StatefulWidget {
  const TwoStepVerificationScreen({super.key});

  @override
  State<TwoStepVerificationScreen> createState() => _TwoStepVerificationScreenState();
}

class _TwoStepVerificationScreenState extends State<TwoStepVerificationScreen> {
  final List<String> _code = ['', '', '', '', '', ''];
  int _currentIndex = 0;
  
  // Timer variables
  int _secondsRemaining = 300; // 5 minutes
  Timer? _timer;
  bool _isResendEnabled = false;

  @override
  void initState() {
    super.initState();
    _startTimer();
  }

  void _startTimer() {
    _secondsRemaining = 300;
    _isResendEnabled = false;
    
    // Cancel existing timer if it exists
    _timer?.cancel();
    
    // Start a new timer
    _timer = Timer.periodic(const Duration(seconds: 1), (timer) {
      setState(() {
        if (_secondsRemaining > 0) {
          _secondsRemaining--;
        } else {
          _isResendEnabled = true;
          _timer?.cancel();
        }
      });
    });
  }

  @override
  void dispose() {
    _timer?.cancel();
    super.dispose();
  }
  
  void _onKeyPressed(String value) {
    if (value == 'delete') {
      if (_currentIndex > 0) {
        setState(() {
          _code[_currentIndex - 1] = '';
          _currentIndex--;
        });
      }
      return;
    }
    
    if (_currentIndex < 6) {
      setState(() {
        _code[_currentIndex] = value;
        _currentIndex++;
      });
    }
  }

  String _formatTimeRemaining() {
    int minutes = _secondsRemaining ~/ 60;
    int seconds = _secondsRemaining % 60;
    return '${minutes.toString().padLeft(2, '0')}:${seconds.toString().padLeft(2, '0')}';
  }

  void _resendCode() {
    if (_isResendEnabled) {
      // Reset the timer
      _startTimer();
      
      // Reset the code
      setState(() {
        _code.fillRange(0, 6, '');
        _currentIndex = 0;
      });
      
      // TODO: Implement actual resend code functionality
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(
          content: Text('Verification code resent'),
          duration: Duration(seconds: 2),
        ),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        backgroundColor: Colors.white,
        elevation: 0,
        leading: IconButton(
          icon: const Icon(
            CupertinoIcons.back,
            color: Color(0xFF002642),
          ),
          onPressed: () {
            Navigator.of(context).pop();
          },
        ),
        title: const Text(
          'Forgot Password',
          style: TextStyle(
            color: Colors.black,
            fontSize: 20,
            fontWeight: FontWeight.w500,
          ),
        ),
        centerTitle: true,
      ),
      body: SafeArea(
        child: Column(
          children: [
            Expanded(
              child: SingleChildScrollView(
                child: Padding(
                  padding: const EdgeInsets.symmetric(horizontal: 24.0),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.center,
                    children: [
                      const SizedBox(height: 24),
                      const Text(
                        'Two Step Verification',
                        style: TextStyle(
                          fontSize: 24,
                          fontWeight: FontWeight.bold,
                          color: Colors.black,
                        ),
                      ),
                      const SizedBox(height: 16),
                      const Text(
                        'Enter the six digit code generated by your authentication app.',
                        textAlign: TextAlign.center,
                        style: TextStyle(
                          fontSize: 16,
                          color: Colors.grey,
                        ),
                      ),
                      const SizedBox(height: 32),
                      
                      // Code display
                      Row(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        children: List.generate(
                          6,
                          (index) => Container(
                            width: 50,
                            height: 50,
                            decoration: BoxDecoration(
                              border: Border.all(color: Colors.grey.shade300),
                              borderRadius: BorderRadius.circular(8),
                            ),
                            child: Center(
                              child: Text(
                                _code[index],
                                style: const TextStyle(
                                  fontSize: 24,
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                      const SizedBox(height: 40),
                      
                      // Confirm button
                      SizedBox(
                        width: double.infinity,
                        height: 56,
                        child: ElevatedButton(
                          onPressed: () {
                            // Navigate to new password screen
                            Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (context) => const NewPasswordScreen(),
                              ),
                            );
                          },
                          style: ElevatedButton.styleFrom(
                            backgroundColor: const Color(0xFF002642),
                            foregroundColor: Colors.white,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(30),
                            ),
                            elevation: 0,
                          ),
                          child: const Text(
                            'Confirm',
                            style: TextStyle(
                              fontSize: 16,
                              fontWeight: FontWeight.w600,
                            ),
                          ),
                        ),
                      ),
                      const SizedBox(height: 24),
                      
                      // Resend code link with timer
                      Row(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          const Text(
                            "Haven't got the code yet? ",
                            style: TextStyle(
                              color: Colors.grey,
                              fontSize: 14,
                            ),
                          ),
                          GestureDetector(
                            onTap: _isResendEnabled ? _resendCode : null,
                            child: Text(
                              _isResendEnabled 
                                  ? 'Resend code' 
                                  : 'Resend code ${_formatTimeRemaining()}',
                              style: TextStyle(
                                color: _isResendEnabled ? Colors.blue : Colors.grey,
                                fontSize: 14,
                                fontWeight: FontWeight.w500,
                              ),
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                ),
              ),
            ),
            
            // Custom keypad
            Container(
              color: Colors.grey.shade200,
              child: Column(
                children: [
                  Row(
                    children: [
                      _buildKeypadButton('1'),
                      _buildKeypadButton('2', subText: 'ABC'),
                      _buildKeypadButton('3', subText: 'DEF'),
                    ],
                  ),
                  Row(
                    children: [
                      _buildKeypadButton('4', subText: 'GHI'),
                      _buildKeypadButton('5', subText: 'JKL'),
                      _buildKeypadButton('6', subText: 'MNO'),
                    ],
                  ),
                  Row(
                    children: [
                      _buildKeypadButton('7', subText: 'PQRS'),
                      _buildKeypadButton('8', subText: 'TUV'),
                      _buildKeypadButton('9', subText: 'WXYZ'),
                    ],
                  ),
                  Row(
                    children: [
                      _buildKeypadButton('*'),
                      _buildKeypadButton('0'),
                      _buildKeypadButton('delete', icon: Icons.backspace_outlined),
                    ],
                  ),
                  const SizedBox(height: 20), // For bottom safe area
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
  
  Widget _buildKeypadButton(String value, {String? subText, IconData? icon}) {
    return Expanded(
      child: InkWell(
        onTap: () => _onKeyPressed(value),
        child: Container(
          height: 60,
          decoration: BoxDecoration(
            color: Colors.white,
            border: Border.all(color: Colors.grey.shade300, width: 0.5),
          ),
          child: Center(
            child: icon != null
                ? Icon(icon, color: Colors.black54)
                : Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Text(
                        value,
                        style: const TextStyle(
                          fontSize: 24,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                      if (subText != null)
                        Text(
                          subText,
                          style: TextStyle(
                            fontSize: 10,
                            color: Colors.grey.shade600,
                          ),
                        ),
                    ],
                  ),
          ),
        ),
      ),
    );
  }
}